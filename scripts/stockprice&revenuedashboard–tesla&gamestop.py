# -*- coding: utf-8 -*-
"""StockPrice&RevenueDashboardâ€“Tesla&GameStop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tlDMttbOetmwMNKaV8Qgr5YxEBHn-3-n

Question 1 - Extracting Tesla Stock Data Using yfinance
"""

!pip install yfinance
!pip install selenium
!pip install webdriver_manager

import yfinance as yf
import pandas as pd

# Define the Tesla ticker symbol
tesla = yf.Ticker("TSLA")

# Get historical stock data (adjust as needed, e.g., "1y" for one year)
tesla_data = tesla.history(period="1y")

# Display the data
print(tesla_data.head())

"""Question 2 - Extracting Tesla Revenue Data Using Web Scraping."""

import requests
from bs4 import BeautifulSoup

url = "https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue"

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
    'Accept-Language': 'en-US,en;q=0.9',
}

response = requests.get(url, headers=headers)
response.raise_for_status()

soup = BeautifulSoup(response.text, 'html.parser')

tables = soup.find_all('table')

revenue_table = tables[1]

# Extract data from the table
revenue_data = []
for row in revenue_table.find_all('tr'):
    cols = row.find_all('td')
    if len(cols) == 2:  # Assuming two columns: date and revenue
        date = cols[0].text.strip()
        revenue = cols[1].text.strip()
        revenue_data.append({"Date": date, "Revenue": revenue})

# Convert to DataFrame
tesla_revenue = pd.DataFrame(revenue_data)

# Display the DataFrame
print(tesla_revenue)

"""Question 3 - Extracting GameStop Stock Data Using yfinance."""

# Define the GameStop ticker symbol
gamestop = yf.Ticker("GME")

# Get historical stock data for GameStop (adjust as needed)
gamestop_data = gamestop.history(period="1y")

# Display the data
print(gamestop_data.head())

"""Question 4 - Extracting GameStop Revenue Data Using Web Scraping"""

import requests
from bs4 import BeautifulSoup
import pandas as pd

url = "https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue"
headers = {'User-Agent': 'Mozilla/5.0'}

try:
    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')

    # Find the revenue table
    table = soup.find('table', {'class': 'historical_data_table'})

    if table:
        gme_revenue = pd.read_html(str(table))[0]
        gme_revenue.columns = ['Year', 'Revenue ($)']
        print(gme_revenue)
    else:
        print("Table not found - try the yfinance solution instead")
except Exception as e:
    print(f"Error: {e}\nPlease use Solution 1 (yfinance)")

"""Question 5. Use Plotly or Matplotlib to create a dashboard comparing Tesla's stock vs. revenue:"""

import plotly.express as px

# Assuming you already have tesla_data and revenue_data
# Merge or align data appropriately for plotting

fig = px.line(tesla_data, x=tesla_data.index, y='Close', title='Tesla Stock Price vs Revenue')
fig.show()

"""Question 6 - GameStop Stock and Revenue Dashboard"""

fig_gme = px.line(gamestop_data, x=gamestop_data.index, y='Close', title='GameStop Stock Price vs Revenue')
fig_gme.show()

"""Question 7 - Sharing your Assignment Notebook
Save your Jupyter Notebook or Python script with all your code and results.

Share the notebook with the required peer review platform or submit it as specified in the assignment instructions.
"""